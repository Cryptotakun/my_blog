---
title: "TD1ravance"
format: html
editor: visual
---

```{r}
library(dplyr)
library(readxl)
library(readr)

data_ex <- read.csv("C:/Users/cyril/OneDrive/Documents/exercice.R/data1.csv", sep = ";")
data_ex <- na.omit(data_ex)
types_data_ex <- sapply(data_ex, class)
cat("Nature des colonnes :", types_data_ex, "\n")
```

Question 2

```{r}
types_data_ex <- sapply(data_ex, class)
cat("Nature des colonnes :", types_data_ex, "\n")

nb_lignes_data_ex <- nrow(data_ex)
cat("Nombre de lignes dans la data.frame :", nb_lignes_data_ex, "\n")

nb_lignes_data_ex
types_data_ex
```

Question 3

```{r}
nombre_sites_olympiques <- sum(data_ex$sites_olympiques_paralympiques == "Site olympique,Site paralympique" | data_ex$sites_olympiques_paralympiques == "Site olympique")
nombre_sites_olympiques
```

Question 4

```{r}
nombre_sites_paralympiques <- sum(data_ex$sites_olympiques_paralympiques == "Site olympique,Site paralympique" | data_ex$sites_olympiques_paralympiques == "Site paralympique")
nombre_sites_paralympiques
```

Question 5

```{r}
sites_multiples <- data_ex %>%
  group_by(nom) %>%
  filter(n_distinct(strsplit(sports, ",")[[1]]) > 1) %>%
  distinct(nom)
cat("Sites avec plusieurs disciplines sportives :\n")
cat(sites_multiples$nom, sep = "\n")
```

Question 6

```{r}
liste_sports <- strsplit(data_ex$sports, ",")

tous_les_sports <- unlist(liste_sports)

sports_para_olympiques <- tous_les_sports[grep("Para", tous_les_sports)]

cat("Sports para-olympiques accueillis :\n")
cat(sports_para_olympiques, sep = "\n")
```

Question 7

```{r}
nombre_disciplines_par_site <- data_ex %>%
  group_by(nom) %>%
  summarise(nombre_disciplines = n_distinct(strsplit(sports, ",")[[1]]))


site_plus_disciplines <- nombre_disciplines_par_site %>%
  filter(nombre_disciplines == max(nombre_disciplines))


cat("Site(s) accueillant le plus de disciplines différentes :\n")
cat(site_plus_disciplines$nom, sep = "\n")
```

Question 8

```{r}
all_sports <- unlist(strsplit(data_ex$sports, ","))

nombre_occurrences <- table(all_sports)

discipline_plus_sites <- names(nombre_occurrences)[which.max(nombre_occurrences)]
cat("Discipline qui aura lieu sur le plus grand nombre de sites :", discipline_plus_sites, "\n")
sites_discipline_plus_sites <- data_ex %>%
  filter(grepl(discipline_plus_sites, sports)) %>%
  distinct(nom)
cat("Sites où cette discipline aura lieu :\n")
cat(sites_discipline_plus_sites$nom, sep = "\n")
```

Question 9

```{r}
all_sports <- unlist(strsplit(data_ex$sports, ","))

nombre_occurrences <- table(all_sports)

discipline_plus_sites <- names(nombre_occurrences)[which.max(nombre_occurrences)]

cat("Discipline qui aura lieu sur le plus grand nombre de sites :", discipline_plus_sites, "\n")

sites_discipline_plus_sites <- data_ex %>%
  filter(grepl(discipline_plus_sites, sports)) %>%
  distinct(nom)


cat("Sites où cette discipline aura lieu :\n")
cat(sites_discipline_plus_sites$nom, sep = "\n")
```

Question 10

```{r}
distance_vol_oiseau <- function(coord1, coord2) {
  lat_lon1 <- as.numeric(strsplit(coord1, ", ")[[1]])
  lat_lon2 <- as.numeric(strsplit(coord2, ", ")[[1]])
  
  lat1 <- lat_lon1[1]
  lon1 <- lat_lon1[2]
  lat2 <- lat_lon2[1]
  lon2 <- lat_lon2[2]
  
  rad <- pi/180
  dlat <- (lat2 - lat1) * rad
  dlon <- (lon2 - lon1) * rad
  a <- sin(dlat/2)^2 + cos(lat1 * rad) * cos(lat2 * rad) * sin(dlon/2)^2
  c <- 2 * atan2(sqrt(a), sqrt(1-a))
  R <- 6371 # Rayon de la Terre en kilomètres
  return(R * c)
}

site1 <- ""
site2 <- ""
distance_min <- Inf

for (i in 1:(nrow(data_ex) - 1)) {
  for (j in (i+1):nrow(data_ex)) {
    distance <- distance_vol_oiseau(data_ex[i, "geo_point"], data_ex[j, "geo_point"])
    if (distance < distance_min) {
      distance_min <- distance
      site1 <- data_ex[i, "nom"]
      site2 <- data_ex[j, "nom"]
    }
  }
}

cat("Les deux sites les plus proches sont :", site1, "et", site2, "\n")
cat("Distance à vol d'oiseau entre les deux sites :", distance_min, "kilomètres\n")
```

Question 11

```{r}
site1 <- ""
site2 <- ""
distance_max <- 0

for (i in 1:(nrow(data_ex) - 1)) {
  for (j in (i+1):nrow(data_ex)) {
    distance <- distance_vol_oiseau(data_ex[i, "geo_point"], data_ex[j, "geo_point"])
    if (distance > distance_max) {
      distance_max <- distance
      site1 <- data_ex[i, "nom"]
      site2 <- data_ex[j, "nom"]
    }
  }
}

cat("Les deux sites les plus éloignés sont :", site1, "et", site2, "\n")
cat("Distance à vol d'oiseau entre les deux sites :", distance_max, "kilomètres\n")
```

