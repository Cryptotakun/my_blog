{
  "hash": "977f088cb387a267327b64d306162017",
  "result": {
    "markdown": "---\ntitle: \"TD3ravancé\"\nformat: html\neditor: visual\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(stringr)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttachement du package : 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLes objets suivants sont masqués depuis 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(arrow)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttachement du package : 'arrow'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nL'objet suivant est masqué depuis 'package:lubridate':\n\n    duration\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nL'objet suivant est masqué depuis 'package:utils':\n\n    timestamp\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttachement du package : 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLes objets suivants sont masqués depuis 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLes objets suivants sont masqués depuis 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(RSQLite)\nlibrary(jsonlite)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: le package 'jsonlite' a été compilé avec la version R 4.3.3\n```\n:::\n:::\n\nQuestion 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchemin_dossier <- \"data\"\n\nfichiers <- list.files(chemin_dossier)\n\ncat(\"Les fichiers présents dans le dossier 'data' sont :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLes fichiers présents dans le dossier 'data' sont :\n```\n:::\n\n```{.r .cell-code}\ncat(fichiers, sep = \"\\n\")\n```\n\n```{.r .cell-code}\nextensions <- tools::file_ext(fichiers)\ncat(\"\\nLes extensions des différents fichiers sont :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nLes extensions des différents fichiers sont :\n```\n:::\n\n```{.r .cell-code}\ncat(extensions, sep = \"\\n\")\n```\n:::\n\n\nQuestion 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_parquet <- arrow::read_parquet(\"C:\\\\Users\\\\cyril\\\\OneDrive\\\\Documents\\\\exercice.R\\\\data\\\\tokyo_athletes.parquet\")\n\nprint(paste(\"Dimensions de la table :\", nrow(table_parquet), \" lignes x \", ncol(table_parquet), \" colonnes\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Dimensions de la table : 11085  lignes x  3  colonnes\"\n```\n:::\n\n```{.r .cell-code}\nprint(\"Colonnes présentes : \")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Colonnes présentes : \"\n```\n:::\n\n```{.r .cell-code}\nprint(colnames(table_parquet))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Name\"       \"NOC\"        \"Discipline\"\n```\n:::\n:::\n\n\nQuestion 3\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_json <- jsonlite::fromJSON(\"C:\\\\Users\\\\cyril\\\\OneDrive\\\\Documents\\\\exercice.R\\\\data\\\\olympics_athletes.json\")\n\ntable <- as.data.frame(data_json)\n\ncat(\"Dimensions de la table :\", nrow(table), \"lignes x \", ncol(table), \"colonnes\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDimensions de la table : 269731 lignes x  13 colonnes\n```\n:::\n\n```{.r .cell-code}\ncat(\"Colonnes présentes :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nColonnes présentes :\n```\n:::\n\n```{.r .cell-code}\nprint(names(table))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"ID\"     \"Name\"   \"Sex\"    \"Age\"    \"Height\" \"Weight\" \"Team\"   \"NOC\"   \n [9] \"Games\"  \"City\"   \"Sport\"  \"Event\"  \"Medal\" \n```\n:::\n:::\n\n\nQuestion 4\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_sqlite <- \"C:\\\\Users\\\\cyril\\\\OneDrive\\\\Documents\\\\exercice.R\\\\data\\\\data.sqlite\"\n\nconnexion <- dbConnect(SQLite(), data_sqlite)\n\ntables <- dbListTables(connexion)\n\ncat(\"Tables présentes dans la base de données SQLite :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTables présentes dans la base de données SQLite :\n```\n:::\n\n```{.r .cell-code}\ncat(tables, sep = \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nolympics_athletes\ntokyo_athletes\ntokyo_medals\ntokyo_teams\n```\n:::\n:::\n\n\nQuestion 5\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbWriteTable(connexion, \"olympics_athletes\", data_json, overwrite = TRUE)\n\ndbWriteTable(connexion, \"tokyo_athletes\", table_parquet, overwrite = TRUE)\n\ntables <- dbListTables(connexion)\ncat(\"\\nTables présentes après l'ajout des nouvelles tables :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nTables présentes après l'ajout des nouvelles tables :\n```\n:::\n\n```{.r .cell-code}\ncat(tables, sep = \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nolympics_athletes\ntokyo_athletes\ntokyo_medals\ntokyo_teams\n```\n:::\n:::\n\n\nQuestion 6\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolonnes_olympics_athletes <- dbListFields(connexion, \"olympics_athletes\")\n\ncat(\"Colonnes de la table olympics_athletes :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nColonnes de la table olympics_athletes :\n```\n:::\n\n```{.r .cell-code}\ncat(colonnes_olympics_athletes, sep = \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nID\nName\nSex\nAge\nHeight\nWeight\nTeam\nNOC\nGames\nCity\nSport\nEvent\nMedal\n```\n:::\n\n```{.r .cell-code}\ndbDisconnect(connexion)\n```\n:::\n\n\nQuestion 7\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_sqlite <- \"C:\\\\Users\\\\cyril\\\\OneDrive\\\\Documents\\\\exercice.R\\\\data\\\\data.sqlite\"\n\nconnexion <- dbConnect(SQLite(), data_sqlite)\n\nolympics_athletes <- dbReadTable(connexion, \"olympics_athletes\")\n\nolympics_athletes_tibble <- as_tibble(olympics_athletes)\n\nprint(olympics_athletes_tibble)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 269,731 × 13\n      ID Name      Sex     Age Height Weight Team  NOC   Games City  Sport Event\n   <int> <chr>     <chr> <int>  <int>  <dbl> <chr> <chr> <chr> <chr> <chr> <chr>\n 1     1 A Dijiang M        24    180     80 China CHN   1992… Barc… Bask… Bask…\n 2     2 A Lamusi  M        23    170     60 China CHN   2012… Lond… Judo  Judo…\n 3     3 Gunnar N… M        24     NA     NA Denm… DEN   1920… Antw… Foot… Foot…\n 4     4 Edgar Li… M        34     NA     NA Denm… DEN   1900… Paris Tug-… Tug-…\n 5     5 Christin… F        21    185     82 Neth… NED   1988… Calg… Spee… Spee…\n 6     5 Christin… F        21    185     82 Neth… NED   1988… Calg… Spee… Spee…\n 7     5 Christin… F        25    185     82 Neth… NED   1992… Albe… Spee… Spee…\n 8     5 Christin… F        25    185     82 Neth… NED   1992… Albe… Spee… Spee…\n 9     5 Christin… F        27    185     82 Neth… NED   1994… Lill… Spee… Spee…\n10     5 Christin… F        27    185     82 Neth… NED   1994… Lill… Spee… Spee…\n# ℹ 269,721 more rows\n# ℹ 1 more variable: Medal <chr>\n```\n:::\n\n```{.r .cell-code}\ndbDisconnect(connexion)\n```\n:::\n\n\nQuestion 8\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_sqlite <- \"C:\\\\Users\\\\cyril\\\\OneDrive\\\\Documents\\\\exercice.R\\\\data\\\\data.sqlite\"\n\nconnexion <- dbConnect(SQLite(), data_sqlite)\n\nolympics_athletes <- dbReadTable(connexion, \"olympics_athletes\")\n\nolympics_athletes <- mutate(olympics_athletes, Sex = as.factor(Sex))\n\nprint(head(olympics_athletes))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ID                     Name Sex Age Height Weight           Team NOC\n1  1                A Dijiang   M  24    180     80          China CHN\n2  2                 A Lamusi   M  23    170     60          China CHN\n3  3      Gunnar Nielsen Aaby   M  24     NA     NA        Denmark DEN\n4  4     Edgar Lindenau Aabye   M  34     NA     NA Denmark/Sweden DEN\n5  5 Christine Jacoba Aaftink   F  21    185     82    Netherlands NED\n6  5 Christine Jacoba Aaftink   F  21    185     82    Netherlands NED\n        Games      City         Sport                              Event Medal\n1 1992 Summer Barcelona    Basketball        Basketball Men's Basketball  <NA>\n2 2012 Summer    London          Judo       Judo Men's Extra-Lightweight  <NA>\n3 1920 Summer Antwerpen      Football            Football Men's Football  <NA>\n4 1900 Summer     Paris    Tug-Of-War        Tug-Of-War Men's Tug-Of-War  Gold\n5 1988 Winter   Calgary Speed Skating   Speed Skating Women's 500 metres  <NA>\n6 1988 Winter   Calgary Speed Skating Speed Skating Women's 1,000 metres  <NA>\n```\n:::\n\n```{.r .cell-code}\ndbDisconnect(connexion)\n```\n:::\n\n\nQuestion 9\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolympics_athletes <- olympics_athletes %>%\n  separate(\n    col = Games, \n    into = c(\"Year\", \"Season\"), \n    sep = \" \",\n    convert = TRUE\n  ) %>%\n  mutate(\n    isSummer = ifelse(tolower(Season) == \"summer\", TRUE, FALSE)\n  ) %>%\n  select(-Season)  \nprint(head(olympics_athletes))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  ID                     Name Sex Age Height Weight           Team NOC Year\n1  1                A Dijiang   M  24    180     80          China CHN 1992\n2  2                 A Lamusi   M  23    170     60          China CHN 2012\n3  3      Gunnar Nielsen Aaby   M  24     NA     NA        Denmark DEN 1920\n4  4     Edgar Lindenau Aabye   M  34     NA     NA Denmark/Sweden DEN 1900\n5  5 Christine Jacoba Aaftink   F  21    185     82    Netherlands NED 1988\n6  5 Christine Jacoba Aaftink   F  21    185     82    Netherlands NED 1988\n       City         Sport                              Event Medal isSummer\n1 Barcelona    Basketball        Basketball Men's Basketball  <NA>     TRUE\n2    London          Judo       Judo Men's Extra-Lightweight  <NA>     TRUE\n3 Antwerpen      Football            Football Men's Football  <NA>     TRUE\n4     Paris    Tug-Of-War        Tug-Of-War Men's Tug-Of-War  Gold     TRUE\n5   Calgary Speed Skating   Speed Skating Women's 500 metres  <NA>    FALSE\n6   Calgary Speed Skating Speed Skating Women's 1,000 metres  <NA>    FALSE\n```\n:::\n:::\n\n\n\nQuestion 10\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoyenne_age <- olympics_athletes %>%\n  filter(isSummer) %>%  # Filtre pour garder uniquement les Jeux d'été\n  group_by(Year) %>%     # Regrouper par année des Jeux\n  summarise(moyenne_age = mean(Age, na.rm = TRUE))  \nplus_jeune <- moyenne_age %>%\n  filter(moyenne_age == min(moyenne_age))  \n\nplus_vieux <- moyenne_age %>%\n  filter(moyenne_age == max(moyenne_age))  \ncat(\"Moyenne d'âge pour chaque édition des JO d'été :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMoyenne d'âge pour chaque édition des JO d'été :\n```\n:::\n\n```{.r .cell-code}\nprint(moyenne_age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 29 × 2\n    Year moyenne_age\n   <int>       <dbl>\n 1  1896        23.6\n 2  1900        28.9\n 3  1904        26.7\n 4  1906        27.1\n 5  1908        27.0\n 6  1912        27.5\n 7  1920        29.3\n 8  1924        28.1\n 9  1928        28.0\n10  1932        30.2\n# ℹ 19 more rows\n```\n:::\n\n```{.r .cell-code}\ncat(\"\\nEdition avec les athlètes les plus jeunes :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEdition avec les athlètes les plus jeunes :\n```\n:::\n\n```{.r .cell-code}\nprint(plus_jeune)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n   Year moyenne_age\n  <int>       <dbl>\n1  1896        23.6\n```\n:::\n\n```{.r .cell-code}\ncat(\"\\nEdition avec les athlètes les plus âgés :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEdition avec les athlètes les plus âgés :\n```\n:::\n\n```{.r .cell-code}\nprint(plus_vieux)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n   Year moyenne_age\n  <int>       <dbl>\n1  1932        30.2\n```\n:::\n:::\n\n\n\nQuestion 11\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaille_max_par_discipline <- olympics_athletes %>%\n  filter(Sex == \"F\" & !is.na(Height)) %>%  # Filtrer pour garder seulement les athlètes féminines avec une taille définie\n  group_by(Sport) %>%                      # Regrouper par discipline\n  summarise(max_height = max(Height))      \nplus_grande_taille <- taille_max_par_discipline %>%\n  filter(max_height == max(max_height))    \nnombre_max_taille <- taille_max_par_discipline %>%\n  group_by(Sport) %>%\n  summarise(nombre_max = sum(max_height == max(max_height))) %>%\n  arrange(desc(nombre_max))           \ncat(\"Discipline des JO d'été avec la plus grande taille des athlètes féminines :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDiscipline des JO d'été avec la plus grande taille des athlètes féminines :\n```\n:::\n\n```{.r .cell-code}\nprint(plus_grande_taille)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  Sport      max_height\n  <chr>           <int>\n1 Basketball        213\n```\n:::\n\n```{.r .cell-code}\ncat(\"\\nNombre de fois où chaque discipline a été la discipline avec la plus grande taille des athlètes :\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nNombre de fois où chaque discipline a été la discipline avec la plus grande taille des athlètes :\n```\n:::\n\n```{.r .cell-code}\nprint(nombre_max_taille)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 2\n   Sport            nombre_max\n   <chr>                 <int>\n 1 Alpine Skiing             1\n 2 Archery                   1\n 3 Art Competitions          1\n 4 Athletics                 1\n 5 Badminton                 1\n 6 Basketball                1\n 7 Beach Volleyball          1\n 8 Biathlon                  1\n 9 Bobsleigh                 1\n10 Boxing                    1\n# ℹ 40 more rows\n```\n:::\n:::\n\n\nQuestion 12\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexte <- \"Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois\nde Juillet et Août. Les jeux de Rio ont eu lieu du 5 Août 2016 au 20 Août 2016,\nceux de Tokyo du 23 Juillet 2021 au 8 Août 2021, et ceux de Paris auront lieu du\n26 Juillet 2024 au 11 Août 2024. Plus de 10000 athlètes sont attendus du monde\nentier à Paris.\"\n\nregex_date <- \"\\\\b\\\\d{1,2} (?:Janvier|Février|Mars|Avril|Mai|Juin|Juillet|Août|Septembre|Octobre|Novembre|Décembre) \\\\d{4}\\\\b\"\n\ndates <- str_extract_all(texte, regex_date)[[1]]\n\n# Afficher les dates extraites\nprint(dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"5 Août 2016\"     \"20 Août 2016\"    \"23 Juillet 2021\" \"8 Août 2021\"    \n[5] \"26 Juillet 2024\" \"11 Août 2024\"   \n```\n:::\n:::\n\n\nQuestion 13\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexte_modifie <- str_replace_all(texte, c(\n  \"Janvier\" = \"01\", \"Février\" = \"02\", \"Mars\" = \"03\", \n  \"Avril\" = \"04\", \"Mai\" = \"05\", \"Juin\" = \"06\", \n  \"Juillet\" = \"07\", \"Août\" = \"08\", \"Septembre\" = \"09\", \n  \"Octobre\" = \"10\", \"Novembre\" = \"11\", \"Décembre\" = \"12\"\n))\n\nprint(texte_modifie)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois\\nde 07 et 08. Les jeux de Rio ont eu lieu du 5 08 2016 au 20 08 2016,\\nceux de Tokyo du 23 07 2021 au 8 08 2021, et ceux de Paris auront lieu du\\n26 07 2024 au 11 08 2024. Plus de 10000 athlètes sont attendus du monde\\nentier à Paris.\"\n```\n:::\n:::\n\n\nQuestion 14\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndates_extracted <- c(\"5 Août 2016\", \"20 Août 2016\", \"23 Juillet 2021\", \"8 Août 2021\", \"26 Juillet 2024\", \"11 Août 2024\")\ndates_converties <- dmy(dates_extracted)\n\nprint(dates_converties)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2016-08-05\" \"2016-08-20\" \"2021-07-23\" \"2021-08-08\" \"2024-07-26\"\n[6] \"2024-08-11\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}